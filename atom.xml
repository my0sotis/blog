<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><title type="text">Mlog</title><subtitle type="html">Mlog 是我的技术博客，期望学习到更多更新的知识~</subtitle><updated>2021-12-01T06:24:43+00:00</updated><id>https://my0sotis.github.io/blog/</id><link rel="alternate" type="text/html" href="https://my0sotis.github.io/blog/"/><link rel="self" type="application/atom+xml" href="https://my0sotis.github.io/blog/atom.xml"/><author><name>Mavericks</name><uri>https://my0sotis.github.io/</uri><email>my0sotis@qq.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><generator uri="https://gohugo.io/" version="0.89.4">Hugo</generator><entry><title type="text">GitHub Actions 驱动的博客构建</title><link rel="alternate" type="text/html" href="https://my0sotis.github.io/blog/tech/github-actions%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/"/><id>https://my0sotis.github.io/blog/tech/github-actions%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/</id><updated>2021-12-01T06:24:41+00:00</updated><published>2021-11-30T00:00:00+00:00</published><author><name>Mavericks</name><uri>https://my0sotis.github.io/blog/</uri><email>my0sotis@qq.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">此前已经使用GitHub账号创建了一个个人博客，想要保留先前的博客并重新创建一个博客……</summary><content type="html">&lt;p>此前已经使用GitHub账号创建了一个个人博客，想要保留先前的博客并重新创建一个博客，便只能通过项目创建GitHub Pages，但是这样的话就会出现一个问题，如果不将源码公开的话就无法将博客展示出来，但是我并不确定源码中什么东西是不能够公开的 &lt;s>（之前为了方便甚至将SSH公钥和私钥放在公开的博客仓库中，在同学提醒下才删除）&lt;/s>，于是想将源码和构建出来的代码仓库分离的想法。再者，为了便利的进行博客的构建发布，便考虑使用GitHub Actions自动化地进行持续集成开发。&lt;/p>
&lt;h2 id="demands">Demands&lt;/h2>
&lt;ol>
&lt;li>源码与生成网站代码分析，于我而言则是，源码在一个 &lt;code>private&lt;/code> 的仓库，生成出来的网站文件存放在一个 &lt;code>public&lt;/code> 的仓库中用以作为 GitHub Pages 的展示页面。&lt;/li>
&lt;li>使用 GitHub Actions 自动化地进行持续集成开发。&lt;/li>
&lt;/ol>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;ul>
&lt;li>Git&lt;/li>
&lt;li>GitHub&lt;/li>
&lt;li>SSH&lt;/li>
&lt;/ul>
&lt;h2 id="procedure">Procedure&lt;/h2>
&lt;p>不同于通过个人账号创建GitHub Pages，此处我是通过项目创建GitHub Pages，有些许方面不尽相同。&lt;/p>
&lt;h3 id="1-将hugo博客源码添加到github仓库中">1. 将Hugo博客源码添加到GitHub仓库中&lt;/h3>
&lt;p>此步骤网上已有大量教程，此处就不过多赘述。&lt;/p>
&lt;h3 id="2-创建一个用于github-page的仓库">2. 创建一个用于GitHub Page的仓库&lt;/h3>
&lt;p>假如你是使用账号创建的GitHub Page，即创建&lt;code>&amp;lt;Your GitHub Account Name&amp;gt;.github.io&lt;/code>的仓库；如果和我一样，只是通过GitHub项目创建GitHub Page则没有太多要求，只需简洁易记即可，对应的GitHub Page的地址为&lt;code>&amp;lt;Your GitHub Account Name&amp;gt;.github.io/&amp;lt;Your Repositoriy Name&amp;gt;&lt;/code>。&lt;/p>
&lt;h3 id="3-通过ssh连接github">3. 通过SSH连接GitHub&lt;/h3>
&lt;p>此处教程参见 &lt;a href="https://my0sotis.github.io/2019/0001-Hexo-Deploy/#more">Hexo教程 | Mlog (my0sotis.github.io)&lt;/a> 的 &lt;code>5.1 创建GitHub Pages&lt;/code> 处。&lt;/p>
&lt;h3 id="4-创建personal-access-token">4. 创建Personal Access Token&lt;/h3>
&lt;p>由于我的代码构建是跨仓库的，常用的 &lt;strong>&lt;code>GITHUB_TOKEN&lt;/code>&lt;/strong> 没有权限访问外部仓库，所以需要使用 &lt;strong>&lt;code>PERSONAL_TOKEN&lt;/code>&lt;/strong> &lt;sup id="fnref:1">&lt;a href="https://my0sotis.github.io/blog/tech/github-actions%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。生成 Personal Access Token 的过程即进入到 &lt;a href="https://github.com/">GitHub&lt;/a> ，登录到自己的账号上，点击右上角的头像，点选 &lt;code>Settings&lt;/code> ，在出来的设置左侧的菜单中找到 &lt;code>Developer settings -&amp;gt; Personal access tokens&lt;/code> ，点选 &lt;code>Generate new token&lt;/code>，如图配置即可， &lt;code>Note&lt;/code> 可以自定义， &lt;code>Expiration&lt;/code> GitHub不建议选择永久有效，因而我选择了 &lt;code>90 days&lt;/code> ，到期了再次重新生成即可， &lt;code>Select scopes&lt;/code> 按如图设置即可。&lt;/p>
&lt;p>&lt;img src="https://my0sotis.github.io/blog/blog/images/personal_token.png" alt="Personal Access Token" title="Personal Access Token">&lt;/p>
&lt;p>⚠一定要把生成 Personal Access Token 后得到的那个字符串复制下来，如果不记录下来的话，后续只能够重新生成。&lt;/p>
&lt;h3 id="5-在源码的仓库中设置personal-token">5. 在源码的仓库中设置Personal Token&lt;/h3>
&lt;p>得到对应的Personal Access Token后，我们需要将这个Token设置到源码所在的仓库中。在博客源码的仓库中，选择 &lt;code>Settings -&amp;gt; Secrets -&amp;gt; New Repository secret&lt;/code> 进行添加。&lt;/p>
&lt;p>&lt;img src="https://my0sotis.github.io/blog/blog/images/set_secret.png" alt="Set Personal Token" title="设置Personal Token">&lt;/p>
&lt;p>其中，Name可自己设置，此处我设置为 &lt;code>PERSONAL_TOKEN&lt;/code> ，Value值即为上文中得到的 Personal Access Token 。&lt;/p>
&lt;h3 id="6-添加github-actions">6. 添加GitHub Actions&lt;/h3>
&lt;p>终于到了关键的一步，网络上的教程大多是通过GitHub Actions将源码发布到仓库中，公开源代码，但是对于我而言，我更希望将源代码隐藏起来，将发布网页的代码公开，因而我使用了如下的GitHub Actions。需要在博客源码对应的仓库中找到 &lt;code>Actions&lt;/code> 的菜单，点击并创建一个新的 Workflow ，将代码替换为如下代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">main # Set a branch to deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Use Hugo-extended&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">personal_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.PERSONAL_TOKEN }} # Use PERSONAL_TOKEN&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public # Select the folder contain your website&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;GitHub User Name&amp;gt;/&amp;lt;Github Repository&amp;gt; # Select the repository you want to publish&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Select the branch you want to publish&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中，&lt;code>on -&amp;gt; push -&amp;gt; branches&lt;/code> 下选择源码仓库中对应的分支。在&lt;code>jobs -&amp;gt; deploy -&amp;gt; steps&lt;/code> 下的 &lt;code>Setup Hugo&lt;/code> 步骤中，&lt;code>extended&lt;/code> 表明需要使用 &lt;code>Hugo-extended&lt;/code> 包进行构建；在 &lt;code>Deploy&lt;/code> 步骤中，&lt;code>publish_dir&lt;/code> 是需要发布网站代码的位置，在 Hugo 中为 &lt;code>./public&lt;/code> ； &lt;code>external_repository&lt;/code> 为存放网站代码的仓库，按照代码中的格式设置即可； &lt;code>publish_branch&lt;/code> 即发布在网站代码的仓库中的分支名。详细的配置可以查看后面附带的文档。&lt;sup id="fnref:1">&lt;a href="https://my0sotis.github.io/blog/tech/github-actions%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>修改完后，点击 &lt;code>Start Commit&lt;/code> 就会自动进行代码的构建发布了！你可以在博客源码的仓库中选择 Actions ，查看你的 GitHub Actions运行的流程，不放心的话，还可以在博客源码的仓库进行一次 push 操作。&lt;/p>
&lt;hr>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>&lt;a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-deploy-to-external-repository-external_repository">peaceiris/actions-gh-pages: GitHub Actions for GitHub Pages 🚀 Deploy static files and publish your site easily. Static-Site-Generators-friendly.&lt;/a>&amp;#160;&lt;a href="https://my0sotis.github.io/blog/tech/github-actions%E9%A9%B1%E5%8A%A8%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9E%84%E5%BB%BA/#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></content><category scheme="https://my0sotis.github.io/blog/tech/" term="tech" label="tech"/><category scheme="https://my0sotis.github.io/blog/tags/github-actions/" term="GitHub Actions" label="GitHub Actions"/><category scheme="https://my0sotis.github.io/blog/tags/hugo/" term="Hugo" label="Hugo"/></entry><entry><title type="text">Hello World!</title><link rel="alternate" type="text/html" href="https://my0sotis.github.io/blog/life/hello-world/"/><id>https://my0sotis.github.io/blog/life/hello-world/</id><updated>2021-11-30T21:46:38+08:00</updated><published>2021-11-30T00:00:00+00:00</published><author><name>Mavericks</name><uri>https://my0sotis.github.io/blog/</uri><email>my0sotis@qq.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">This is the very first blog of mine. 原本这篇博客仅是占位而已，以保证这个分区有文章，后来一想，还是需要写……</summary><content type="html">&lt;center>&lt;i>This is the very first blog of mine.&lt;/i>&lt;/center>
&lt;p>原本这篇博客仅是占位而已，以保证这个分区有文章，后来一想，还是需要写一些东西的，就当是这个博客的 &lt;s>创刊号&lt;/s> 开篇词吧。&lt;/p>
&lt;p>当时创建自己的博客也是出于记录自己的技术学习路线，同时也是书写自己的技术经验以飨后人，使后来者少走弯路。毕竟中文互联网上相关的所谓博客不过是互相复制，在网上兜兜转转找寻解决方案最终在英文网站才能找到问题的答案也是常有的事，也是想摆脱商用博客的束缚，于浮世间觅一份清欢。&lt;/p>
&lt;p>再者，随着升学后，来到了一个学术水平更高的学校（maybe），在这里认识了解到许许多多兼具学术造诣以及工程能力的教师同学，有历经数年笔耕不辍，稳定产出数十万甚至百万行代码的老师，更不缺少灿若星辰的学术大牛，这些人都是我想要学习的目标，借此记录自己学习过程，也是大有裨益。&lt;/p>
&lt;hr>
&lt;center>雄关漫道真如铁，而今迈步从头越。&lt;/center>
&lt;hr>
&lt;center>此篇记于研一伊始，惟愿毕业无悔而已。&lt;/center></content><category scheme="https://my0sotis.github.io/blog/life/" term="life" label="life"/></entry><entry><title type="text">Powered By Hugo</title><link rel="alternate" type="text/html" href="https://my0sotis.github.io/blog/tech/powered-by-hugo/"/><id>https://my0sotis.github.io/blog/tech/powered-by-hugo/</id><updated>2021-11-30T12:37:27+08:00</updated><published>2021-11-29T00:00:00+00:00</published><author><name>Mavericks</name><uri>https://my0sotis.github.io/blog/</uri><email>my0sotis@qq.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">距离上次更新博客已一年有余，在忙碌完毕业升学的种种之后，又有重拾博客的念头，于忙里偷……</summary><content type="html">&lt;p>距离上次更新博客已一年有余，在忙碌完毕业升学的种种之后，又有重拾博客的念头，于忙里偷闲中重构了一个新的博客，从以前使用 Hexo+NexT 逐步转向 Hugo+MemE ，现今已是全面 Powered By Hugo 了！&lt;/p>
&lt;p>重构博客并非一时兴起，而是有多方面的原因。&lt;/p>
&lt;p>一方面，之前在使用 Hexo+NexT 时，怀着满腔热情对 NexT 做了许多大刀阔斧的修改，将当时版本的博客打磨成了自己最为满意的版本，但是随着时间的推移，老旧版本的许多弊端便显现出来，无法拥有全新版本许多新的特性，但是要升级的话，需要重新对主题进行修改（因为此前的修改都是基于主题原文件进行的，使用 &lt;code>git submodule update&lt;/code> 未免会将原有的修改覆盖），出于对新特性的追求，在原博客的仓库中新创建了一个分支，使用了当时新版本的 Hexo和NexT ，继续进行修改，不知是 &lt;code>node_modules&lt;/code> 污染了主分支上原有的博客源码还是如何，导致当时的博客无法正常启动，&lt;s>虽然我现在找回来了&lt;/s>，于是萌生了使用其他博客框架的想法。&lt;/p>
&lt;p>先前为了使博客的文字更加美观，参考了 &lt;a href="https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts/">Google Fonts 已支持思源宋体！ | reuixiy (io-oi.me)&lt;/a> 这篇文章，看到这个博客时便被深深地吸引了，当即安装了 Hugo，并下载了 &lt;a href="https://io-oi.me/">此博客&lt;/a> 的主题，也就是 MemE ，但由于正值毕业和升学期间，实在分身乏术，就暂且搁置了。直至现今偷得浮生一日闲🤪，难得有时间整理博客，便在原先的基础上修改完善了博客直至现在这番模样。&lt;/p>
&lt;hr>
&lt;center>All in all, Mlog is now Powered By Hugo!&lt;/center></content><category scheme="https://my0sotis.github.io/blog/tech/" term="tech" label="tech"/><category scheme="https://my0sotis.github.io/blog/tags/hugo/" term="Hugo" label="Hugo"/></entry></feed>